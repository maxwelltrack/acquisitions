name: Docker Build and Push

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag_suffix:
        description: 'Additional tag suffix (optional)'
        required: false
        type: string

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "DOCKER_USERNAME secret is not set. Please configure it in GitHub Secrets."
            exit 1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "DOCKER_PASSWORD secret is not set. Please configure it in GitHub Secrets."
            exit 1
          fi
          echo "Docker credentials validation passed"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          platforms: linux/amd64,linux/arm64

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Use the full image name with registry and username
          images: docker.io/${{ secrets.DOCKER_USERNAME }}/acquisitions-app
          tags: |
            # Branch-based tags
            type=ref,event=branch
            # SHA-based tags
            type=sha,prefix={{branch}}-,format=short
            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Production timestamp tag
            type=raw,value=prod-{{date 'YYYYMMDD-HHmmss'}},enable={{is_default_branch}}
            # Custom suffix if provided
            type=raw,value={{branch}}${{ inputs.tag_suffix && format('-{0}', inputs.tag_suffix) || '' }},enable=${{ inputs.tag_suffix != '' }}
          labels: |
            org.opencontainers.image.title=Acquisitions API
            org.opencontainers.image.description=Node.js Express API for acquisitions system
            org.opencontainers.image.vendor=Adrian Hajdin
            org.opencontainers.image.created={{date 'YYYY-MM-DDTHH:mm:ssZ'}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
            BUILD_DATE={{date 'YYYY-MM-DDTHH:mm:ssZ'}}
            GIT_SHA=${{ github.sha }}
            GIT_REF=${{ github.ref_name }}

      - name: Generate build summary
        if: success()
        run: |
          echo "## Docker Build Summary 🐳" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Published Image" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`docker.io/${{ secrets.DOCKER_USERNAME }}/acquisitions-app\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Tags Published" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Date:** $(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_STEP_SUMMARY
          echo "- **Git SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Git Ref:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/acquisitions-app:latest' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
